openapi: 3.0.3
info:
  title: CapTable Management API
  description: |
    Enterprise-grade API for cap table management, equity tracking, and stakeholder operations.
    
    ## Features
    - Complete cap table management operations
    - Real-time equity calculations and valuations
    - Stakeholder and document management
    - Comprehensive reporting and analytics
    - Webhook notifications for real-time updates
    
    ## Authentication
    All API endpoints require authentication using API keys. Include your API key in the request header:
    ```
    Authorization: Bearer your_api_key_here
    ```
    
    ## Rate Limits
    - **Standard**: 1000 requests per hour
    - **Premium**: 5000 requests per hour  
    - **Enterprise**: 10000 requests per hour
    
    ## Environments
    - **Production**: https://api.captable.com/v1
    - **Sandbox**: https://api.sandbox.captable.com/v1
    
  version: 1.0.0
  contact:
    name: CapTable API Support
    email: api-support@captable.com
    url: https://docs.captable.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: https://api.captable.com/v1
    description: Production server
  - url: https://api.sandbox.captable.com/v1
    description: Sandbox server
  - url: http://localhost:3000/api/v1
    description: Development server

security:
  - ApiKeyAuth: []

paths:
  # Company Management
  /companies:
    get:
      tags: [Companies]
      summary: List companies
      description: Retrieve a paginated list of companies accessible to the API key
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
        - name: search
          in: query
          schema:
            type: string
          description: Search companies by name
      responses:
        '200':
          description: List of companies
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Company'
                  pagination:
                    $ref: '#/components/schemas/PaginationResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimited'
    post:
      tags: [Companies]
      summary: Create company
      description: Create a new company with initial cap table structure
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCompanyRequest'
      responses:
        '201':
          description: Company created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /companies/{companyId}:
    get:
      tags: [Companies]
      summary: Get company
      description: Retrieve detailed information about a specific company
      parameters:
        - $ref: '#/components/parameters/CompanyId'
      responses:
        '200':
          description: Company details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDetails'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags: [Companies]
      summary: Update company
      description: Update company information
      parameters:
        - $ref: '#/components/parameters/CompanyId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompanyRequest'
      responses:
        '200':
          description: Company updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'

  # Cap Table Operations
  /companies/{companyId}/cap-table:
    get:
      tags: [CapTable]
      summary: Get cap table
      description: Retrieve the complete cap table for a company
      parameters:
        - $ref: '#/components/parameters/CompanyId'
        - name: asOfDate
          in: query
          schema:
            type: string
            format: date
          description: Calculate cap table as of specific date (defaults to current date)
        - name: includeOptions
          in: query
          schema:
            type: boolean
            default: true
          description: Include option pools and grants in calculations
      responses:
        '200':
          description: Complete cap table information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapTable'

  /companies/{companyId}/cap-table/summary:
    get:
      tags: [CapTable]
      summary: Get cap table summary
      description: Get high-level cap table metrics and ownership breakdown
      parameters:
        - $ref: '#/components/parameters/CompanyId'
      responses:
        '200':
          description: Cap table summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapTableSummary'

  # Stakeholder Management
  /companies/{companyId}/stakeholders:
    get:
      tags: [Stakeholders]
      summary: List stakeholders
      description: Get all stakeholders for a company
      parameters:
        - $ref: '#/components/parameters/CompanyId'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/StakeholderType'
          description: Filter by stakeholder type
      responses:
        '200':
          description: List of stakeholders
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Stakeholder'
                  pagination:
                    $ref: '#/components/schemas/PaginationResponse'
    post:
      tags: [Stakeholders]
      summary: Create stakeholder
      description: Add a new stakeholder to the cap table
      parameters:
        - $ref: '#/components/parameters/CompanyId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStakeholderRequest'
      responses:
        '201':
          description: Stakeholder created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stakeholder'

  /companies/{companyId}/stakeholders/{stakeholderId}:
    get:
      tags: [Stakeholders]
      summary: Get stakeholder
      description: Retrieve detailed stakeholder information including holdings
      parameters:
        - $ref: '#/components/parameters/CompanyId'
        - $ref: '#/components/parameters/StakeholderId'
      responses:
        '200':
          description: Stakeholder details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StakeholderDetails'

  # Securities Management
  /companies/{companyId}/securities:
    get:
      tags: [Securities]
      summary: List securities
      description: Get all securities (shares, options, etc.) for a company
      parameters:
        - $ref: '#/components/parameters/CompanyId'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/SecurityType'
          description: Filter by security type
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/SecurityStatus'
          description: Filter by security status
      responses:
        '200':
          description: List of securities
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Security'
                  pagination:
                    $ref: '#/components/schemas/PaginationResponse'
    post:
      tags: [Securities]
      summary: Issue security
      description: Issue new shares, options, or other securities
      parameters:
        - $ref: '#/components/parameters/CompanyId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueSecurityRequest'
      responses:
        '201':
          description: Security issued successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security'

  # Transactions
  /companies/{companyId}/transactions:
    get:
      tags: [Transactions]
      summary: List transactions
      description: Get transaction history for a company
      parameters:
        - $ref: '#/components/parameters/CompanyId'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/TransactionType'
        - name: fromDate
          in: query
          schema:
            type: string
            format: date
        - name: toDate
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: List of transactions
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Transaction'
                  pagination:
                    $ref: '#/components/schemas/PaginationResponse'
    post:
      tags: [Transactions]
      summary: Create transaction
      description: Record a new equity transaction
      parameters:
        - $ref: '#/components/parameters/CompanyId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransactionRequest'
      responses:
        '201':
          description: Transaction created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'

  # Valuations
  /companies/{companyId}/valuations:
    get:
      tags: [Valuations]
      summary: List valuations
      description: Get valuation history for a company
      parameters:
        - $ref: '#/components/parameters/CompanyId'
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/ValuationType'
      responses:
        '200':
          description: List of valuations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Valuation'
    post:
      tags: [Valuations]
      summary: Create valuation
      description: Record a new company valuation (409A, fundraising, etc.)
      parameters:
        - $ref: '#/components/parameters/CompanyId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateValuationRequest'
      responses:
        '201':
          description: Valuation created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Valuation'

  # Reports
  /companies/{companyId}/reports:
    get:
      tags: [Reports]
      summary: List available reports
      description: Get list of available report types for a company
      parameters:
        - $ref: '#/components/parameters/CompanyId'
      responses:
        '200':
          description: Available reports
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReportTemplate'

  /companies/{companyId}/reports/{reportType}:
    post:
      tags: [Reports]
      summary: Generate report
      description: Generate a specific report type
      parameters:
        - $ref: '#/components/parameters/CompanyId'
        - name: reportType
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ReportType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateReportRequest'
      responses:
        '202':
          description: Report generation started
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportJobResponse'

  # Webhooks
  /webhooks:
    get:
      tags: [Webhooks]
      summary: List webhooks
      description: Get all webhooks configured for the API key
      responses:
        '200':
          description: List of webhooks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Webhook'
    post:
      tags: [Webhooks]
      summary: Create webhook
      description: Configure a new webhook endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebhookRequest'
      responses:
        '201':
          description: Webhook created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'

  /webhooks/{webhookId}:
    get:
      tags: [Webhooks]
      summary: Get webhook
      description: Retrieve webhook configuration and delivery logs
      parameters:
        - $ref: '#/components/parameters/WebhookId'
      responses:
        '200':
          description: Webhook details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookDetails'
    put:
      tags: [Webhooks]
      summary: Update webhook
      description: Update webhook configuration
      parameters:
        - $ref: '#/components/parameters/WebhookId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWebhookRequest'
      responses:
        '200':
          description: Webhook updated successfully
    delete:
      tags: [Webhooks]
      summary: Delete webhook
      description: Remove webhook configuration
      parameters:
        - $ref: '#/components/parameters/WebhookId'
      responses:
        '204':
          description: Webhook deleted successfully

components:
  securitySchemes:
    ApiKeyAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        API key authentication. Include your API key in the Authorization header:
        `Authorization: Bearer your_api_key_here`

  parameters:
    CompanyId:
      name: companyId
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: Unique identifier for the company
      
    StakeholderId:
      name: stakeholderId
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: Unique identifier for the stakeholder
      
    WebhookId:
      name: webhookId
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: Unique identifier for the webhook
      
    Page:
      name: page
      in: query
      schema:
        type: integer
        minimum: 1
        default: 1
      description: Page number for pagination
      
    Limit:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
      description: Number of items per page

  responses:
    BadRequest:
      description: Invalid request data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
            
    Unauthorized:
      description: Authentication required or invalid API key
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
            
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
            
    RateLimited:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      headers:
        X-RateLimit-Limit:
          schema:
            type: integer
          description: Request limit per hour
        X-RateLimit-Remaining:
          schema:
            type: integer
          description: Remaining requests in current window
        X-RateLimit-Reset:
          schema:
            type: integer
          description: Unix timestamp when rate limit resets

  schemas:
    # Core Models
    Company:
      type: object
      required: [id, name, jurisdiction, created_at]
      properties:
        id:
          type: string
          format: uuid
          description: Unique company identifier
        name:
          type: string
          minLength: 1
          maxLength: 200
          description: Company legal name
        jurisdiction:
          type: string
          description: Legal jurisdiction (e.g., "Delaware", "UK", "Singapore")
        incorporation_date:
          type: string
          format: date
          description: Date of incorporation
        tax_id:
          type: string
          description: Tax identification number
        website:
          type: string
          format: uri
          description: Company website URL
        created_at:
          type: string
          format: date-time
          description: Company creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp

    CompanyDetails:
      allOf:
        - $ref: '#/components/schemas/Company'
        - type: object
          properties:
            authorized_shares:
              type: integer
              minimum: 0
              description: Total authorized shares
            outstanding_shares:
              type: integer
              minimum: 0
              description: Total outstanding shares
            share_classes:
              type: array
              items:
                $ref: '#/components/schemas/ShareClass'
            stakeholder_count:
              type: integer
              minimum: 0
              description: Total number of stakeholders
            last_valuation:
              $ref: '#/components/schemas/Valuation'

    ShareClass:
      type: object
      required: [id, name, type, authorized_shares]
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: Share class name (e.g., "Common", "Series A Preferred")
        type:
          $ref: '#/components/schemas/ShareClassType'
        authorized_shares:
          type: integer
          minimum: 0
        outstanding_shares:
          type: integer
          minimum: 0
        par_value:
          type: number
          minimum: 0
          description: Par value per share
        liquidation_preference:
          type: number
          minimum: 0
          description: Liquidation preference multiple
        dividend_rate:
          type: number
          minimum: 0
          maximum: 1
          description: Annual dividend rate (as percentage)

    Stakeholder:
      type: object
      required: [id, name, type, email]
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 200
        type:
          $ref: '#/components/schemas/StakeholderType'
        email:
          type: string
          format: email
        phone:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        tax_id:
          type: string
          description: Tax identification number
        accredited_investor:
          type: boolean
          description: Whether stakeholder is an accredited investor
        total_shares:
          type: integer
          minimum: 0
          description: Total shares owned across all classes
        ownership_percentage:
          type: number
          minimum: 0
          maximum: 1
          description: Total ownership percentage
        created_at:
          type: string
          format: date-time

    StakeholderDetails:
      allOf:
        - $ref: '#/components/schemas/Stakeholder'
        - type: object
          properties:
            holdings:
              type: array
              items:
                $ref: '#/components/schemas/Holding'
            transactions:
              type: array
              items:
                $ref: '#/components/schemas/Transaction'
            documents:
              type: array
              items:
                $ref: '#/components/schemas/Document'

    Security:
      type: object
      required: [id, type, stakeholder_id, quantity]
      properties:
        id:
          type: string
          format: uuid
        type:
          $ref: '#/components/schemas/SecurityType'
        stakeholder_id:
          type: string
          format: uuid
        share_class_id:
          type: string
          format: uuid
        quantity:
          type: integer
          minimum: 0
        price_per_share:
          type: number
          minimum: 0
        strike_price:
          type: number
          minimum: 0
          description: Strike price for options
        exercise_date:
          type: string
          format: date
          description: Exercise date for options
        expiration_date:
          type: string
          format: date
          description: Expiration date for options
        status:
          $ref: '#/components/schemas/SecurityStatus'
        vesting_schedule:
          $ref: '#/components/schemas/VestingSchedule'
        created_at:
          type: string
          format: date-time

    CapTable:
      type: object
      required: [company_id, as_of_date, summary, holdings]
      properties:
        company_id:
          type: string
          format: uuid
        as_of_date:
          type: string
          format: date
        summary:
          $ref: '#/components/schemas/CapTableSummary'
        holdings:
          type: array
          items:
            $ref: '#/components/schemas/Holding'
        share_classes:
          type: array
          items:
            $ref: '#/components/schemas/ShareClass'
        option_pools:
          type: array
          items:
            $ref: '#/components/schemas/OptionPool'

    CapTableSummary:
      type: object
      properties:
        total_authorized_shares:
          type: integer
          minimum: 0
        total_outstanding_shares:
          type: integer
          minimum: 0
        total_options_granted:
          type: integer
          minimum: 0
        total_options_exercised:
          type: integer
          minimum: 0
        fully_diluted_shares:
          type: integer
          minimum: 0
        post_money_valuation:
          type: number
          minimum: 0
        pre_money_valuation:
          type: number
          minimum: 0

    Transaction:
      type: object
      required: [id, type, date, stakeholder_id]
      properties:
        id:
          type: string
          format: uuid
        type:
          $ref: '#/components/schemas/TransactionType'
        date:
          type: string
          format: date
        stakeholder_id:
          type: string
          format: uuid
        security_id:
          type: string
          format: uuid
        quantity:
          type: integer
          minimum: 0
        price_per_share:
          type: number
          minimum: 0
        total_amount:
          type: number
          minimum: 0
        description:
          type: string
          maxLength: 500
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
        created_at:
          type: string
          format: date-time

    Valuation:
      type: object
      required: [id, type, date, price_per_share]
      properties:
        id:
          type: string
          format: uuid
        type:
          $ref: '#/components/schemas/ValuationType'
        date:
          type: string
          format: date
        price_per_share:
          type: number
          minimum: 0
        total_company_value:
          type: number
          minimum: 0
        methodology:
          type: string
          description: Valuation methodology used
        notes:
          type: string
          maxLength: 1000
        created_by:
          type: string
          description: Who performed the valuation
        created_at:
          type: string
          format: date-time

    Webhook:
      type: object
      required: [id, url, events]
      properties:
        id:
          type: string
          format: uuid
        url:
          type: string
          format: uri
          description: Webhook endpoint URL
        events:
          type: array
          items:
            $ref: '#/components/schemas/WebhookEvent'
          description: Events that trigger webhook
        secret:
          type: string
          description: Secret for webhook signature verification
        active:
          type: boolean
          default: true
        created_at:
          type: string
          format: date-time

    # Request/Response Models
    CreateCompanyRequest:
      type: object
      required: [name, jurisdiction]
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        jurisdiction:
          type: string
        incorporation_date:
          type: string
          format: date
        tax_id:
          type: string
        website:
          type: string
          format: uri
        authorized_shares:
          type: integer
          minimum: 1
          default: 10000000

    UpdateCompanyRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        website:
          type: string
          format: uri
        authorized_shares:
          type: integer
          minimum: 1

    CreateStakeholderRequest:
      type: object
      required: [name, type, email]
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        type:
          $ref: '#/components/schemas/StakeholderType'
        email:
          type: string
          format: email
        phone:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        tax_id:
          type: string
        accredited_investor:
          type: boolean
          default: false

    CreateWebhookRequest:
      type: object
      required: [url, events]
      properties:
        url:
          type: string
          format: uri
        events:
          type: array
          items:
            $ref: '#/components/schemas/WebhookEvent'
        secret:
          type: string
          minLength: 8

    PaginationResponse:
      type: object
      properties:
        page:
          type: integer
          minimum: 1
        limit:
          type: integer
          minimum: 1
        total:
          type: integer
          minimum: 0
        pages:
          type: integer
          minimum: 0

    ErrorResponse:
      type: object
      required: [error, message]
      properties:
        error:
          type: string
          description: Error code
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          description: Additional error details
        request_id:
          type: string
          description: Unique request identifier for debugging

    # Enums
    StakeholderType:
      type: string
      enum: [EMPLOYEE, FOUNDER, INVESTOR, ADVISOR, CONTRACTOR, COMPANY]
      
    SecurityType:
      type: string
      enum: [COMMON_STOCK, PREFERRED_STOCK, STOCK_OPTION, ISO, NSO, RSU, WARRANT, CONVERTIBLE_NOTE]
      
    SecurityStatus:
      type: string
      enum: [GRANTED, VESTING, VESTED, EXERCISED, CANCELLED, EXPIRED]
      
    ShareClassType:
      type: string
      enum: [COMMON, PREFERRED, PREFERRED_A, PREFERRED_B, PREFERRED_C]
      
    TransactionType:
      type: string
      enum: [ISSUANCE, TRANSFER, EXERCISE, CANCELLATION, REPURCHASE, CONVERSION]
      
    ValuationType:
      type: string
      enum: [409A, FUNDRAISING, FAIR_VALUE, MARKET_COMPARABLE, DCF]
      
    WebhookEvent:
      type: string
      enum: [
        company.created, company.updated,
        stakeholder.created, stakeholder.updated,
        security.issued, security.exercised, security.transferred,
        transaction.created,
        valuation.created,
        report.generated
      ]

    ReportType:
      type: string
      enum: [CAP_TABLE, OWNERSHIP_SUMMARY, TRANSACTION_HISTORY, DILUTION_ANALYSIS, BOARD_PACKAGE]

    # Supporting Models
    Address:
      type: object
      properties:
        street1:
          type: string
        street2:
          type: string
        city:
          type: string
        state:
          type: string
        postal_code:
          type: string
        country:
          type: string

    VestingSchedule:
      type: object
      properties:
        type:
          type: string
          enum: [TIME_BASED, MILESTONE_BASED]
        cliff_months:
          type: integer
          minimum: 0
        vesting_months:
          type: integer
          minimum: 0
        start_date:
          type: string
          format: date

    Holding:
      type: object
      properties:
        stakeholder_id:
          type: string
          format: uuid
        security_id:
          type: string
          format: uuid
        share_class:
          type: string
        quantity:
          type: integer
          minimum: 0
        ownership_percentage:
          type: number
          minimum: 0
          maximum: 1

    OptionPool:
      type: object
      properties:
        name:
          type: string
        total_shares:
          type: integer
          minimum: 0
        granted_shares:
          type: integer
          minimum: 0
        available_shares:
          type: integer
          minimum: 0

    Document:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: string
        url:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time

    ReportTemplate:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ReportType'
        name:
          type: string
        description:
          type: string

    GenerateReportRequest:
      type: object
      properties:
        format:
          type: string
          enum: [PDF, CSV, EXCEL, JSON]
          default: PDF
        as_of_date:
          type: string
          format: date
        include_options:
          type: boolean
          default: true

    ReportJobResponse:
      type: object
      properties:
        job_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [QUEUED, PROCESSING, COMPLETED, FAILED]
        download_url:
          type: string
          format: uri
          description: Available when status is COMPLETED

    IssueSecurityRequest:
      type: object
      required: [type, stakeholder_id, quantity]
      properties:
        type:
          $ref: '#/components/schemas/SecurityType'
        stakeholder_id:
          type: string
          format: uuid
        share_class_id:
          type: string
          format: uuid
        quantity:
          type: integer
          minimum: 1
        price_per_share:
          type: number
          minimum: 0
        strike_price:
          type: number
          minimum: 0
        vesting_schedule:
          $ref: '#/components/schemas/VestingSchedule'

    CreateTransactionRequest:
      type: object
      required: [type, date, stakeholder_id]
      properties:
        type:
          $ref: '#/components/schemas/TransactionType'
        date:
          type: string
          format: date
        stakeholder_id:
          type: string
          format: uuid
        security_id:
          type: string
          format: uuid
        quantity:
          type: integer
          minimum: 0
        price_per_share:
          type: number
          minimum: 0
        description:
          type: string
          maxLength: 500

    CreateValuationRequest:
      type: object
      required: [type, date, price_per_share]
      properties:
        type:
          $ref: '#/components/schemas/ValuationType'
        date:
          type: string
          format: date
        price_per_share:
          type: number
          minimum: 0
        methodology:
          type: string
        notes:
          type: string
          maxLength: 1000

    UpdateWebhookRequest:
      type: object
      properties:
        url:
          type: string
          format: uri
        events:
          type: array
          items:
            $ref: '#/components/schemas/WebhookEvent'
        active:
          type: boolean

    WebhookDetails:
      allOf:
        - $ref: '#/components/schemas/Webhook'
        - type: object
          properties:
            delivery_stats:
              type: object
              properties:
                total_deliveries:
                  type: integer
                successful_deliveries:
                  type: integer
                failed_deliveries:
                  type: integer
                last_delivery_at:
                  type: string
                  format: date-time
            recent_deliveries:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  event:
                    $ref: '#/components/schemas/WebhookEvent'
                  status:
                    type: string
                    enum: [SUCCESS, FAILED, RETRYING]
                  delivered_at:
                    type: string
                    format: date-time
                  response_code:
                    type: integer
                  retry_count:
                    type: integer